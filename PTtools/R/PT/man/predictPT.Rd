\name{estimateEps0}
\alias{estimateEps0}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{
Ell_1 Phase Transition for Gaussian Matrices
}
\description{
Given the undersampling delta, a field, and the type of prediction
(weak or strong), this function return the sparsity
at the compressed sensing Phase transition location for 
Gaussian i.i.d ensemble.
}
\usage{
estimateEps0(delta, field, type)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  
  \item{delta}{
   the undersampling ratio: Number of data points/number of unknowns
    }
  \item{field}{
    the coefficient field. "R", "Pos", "Bnd", "Q", "O" .
    }
  \item{type}{
     the type of prediction: "w" for weak and "s" for strong.
    }
}

\details{
If type is not given the code assumes weak prediction.
}

\value{
The returned value is the sparsity ratio (epsilon)
at that delta, and field.
}
\references{
Deterministic matrices matching the compressed sensing phase transitions of Gaussian random matrices.
http://www.pnas.org/content/110/4/1181.short
}
\author{
Hatef Monajemi (monajemi@stanford.edu) and 
David Donoho   (donoho@stanford.edu)
}
\note{
This code comes with absolutely no gaurantee. The user accepts to be 
responsible for the results generated by this code.
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
}
\examples{
EPSILON_S <- predictPT(1/2, "R", "s")
EPSILON_W <- predictPT(1/2, "R", "w")

## The function is currently defined as
predictPT <-function(delta, field, type="w"){

#PredPT <- data(PredPT);
if(type=="w"){

if(field=="R"){
x = PredPT$delta.Real
y = PredPT$eps.Real
# fit a spline to data of (delta,epsilon)
f<-splinefun(x=x,y=y) 
# predict at new delta
}


if(field=="C"){
x = PredPT$delta.Cplex
y = PredPT$eps.Cplex
# fit a spline to data of (delta,epsilon)
f<-splinefun(x=x,y=y) 
# predict at new delta
}

if(field=="Q" || field=="H2"){
x = PredPT$delta.Q
y = PredPT$eps.Q
# fit a spline to data of (delta,epsilon)
f<-splinefun(x=x,y=y) 

}

if(field=="O" || field=="H3"){
    x = PredPT$delta.O
    y = PredPT$eps.O
    # fit a spline to data of (delta,epsilon)
    f<-splinefun(x=x,y=y)
    # predict at new delta
}

if(field=="Bnd"){
f<- function(x){2*x-1}

}

if(field=="Pos"){
x = PredPT$delta.Pos
y = PredPT$eps.Pos
# fit a spline to data of (delta,epsilon)
f<-splinefun(x=x,y=y) 

}


}else if(type=="s"){

if(field=="R"){
    x = PredPT$delta.Real.S
    y = PredPT$eps.Real.S
    # fit a spline to data of (delta,epsilon)
    f<-splinefun(x=x,y=y)
    # predict at new delta
}


}


u = f(delta);

return(u * (u > 0) )

}


}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
\keyword{ ~CompressedSensing ~Ell1}
